---
import Layout from "../../../layouts/Layout.astro";
import ProductDetail from "../../../components/ProductDetail.astro";
import { products } from "../../../data/products";

export function getStaticPaths() {
    return products.map(product => ({
        params: { id: product.slug },
        props: { product }
    }));
}

const { product } = Astro.props;

// Get the canonical URL for this product
const canonicalUrl = `https://www.variety.gifts/shop/product/${product.slug}`;

// Get the first image for social media preview
const ogImageUrl = product.images[0]?.src.startsWith('http') 
    ? product.images[0].src 
    : `https://www.variety.gifts${product.images[0]?.src}`;

// Prepare props for ProductDetail component
const productDetailProps = product.priceIds ? {
    title: product.name,
    description: product.description,
    price: product.price,
    priceIds: product.priceIds,
    images: product.images,
    colorImages: product.colorImages
} : {
    title: product.name,
    description: product.description,
    price: product.price,
    singlePrice: product.price.replace('$', ''),
    singlePriceId: product.priceId,
    images: product.images,
    colorImages: product.colorImages
};
---

<Layout 
    title={`${product.name} - Variety Gifts Unlimited`} 
    hideHeader={false}
    description={product.description}
    ogTitle={`${product.name} - ${product.price}`}
    ogDescription={product.description}
    ogImage={ogImageUrl}
    ogUrl={canonicalUrl}
>
    <script slot="head" type="application/ld+json" set:html={JSON.stringify({
        "@context": "https://schema.org/",
        "@type": "Product",
        "name": product.name,
        "image": product.images.map(img => img.src.startsWith('http') ? img.src : `https://www.variety.gifts${img.src}`),
        "description": product.description,
        "brand": {
            "@type": "Brand",
            "name": "Variety Gifts Unlimited"
        },
        "offers": {
            "@type": "Offer",
            "priceCurrency": "USD",
            "price": product.price.replace(/[^0-9.]/g, ''),
            "availability": "https://schema.org/InStock",
            "seller": {
                "@type": "Organization",
                "name": "Variety Gifts Unlimited"
            }
        }
    })} />
    
    <ProductDetail {...productDetailProps} />
    
    {product.priceIds && product.colorImages && (
        <script is:inline define:vars={{ priceIds: product.priceIds, colorImages: product.colorImages }}>
            window.priceIds = priceIds;
            window.colorImages = colorImages;
        </script>
    )}
</Layout>