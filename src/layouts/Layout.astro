---
interface Props {
	title: string;
}

const { title } = Astro.props;
import '@fontsource/creepster';
import '@fontsource-variable/roboto-slab';
import Header from '../components/Header.astro';
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<link rel="icon" type="image/x-icon" href="/favicon.ico" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>

		<meta
			name="description"
			content="Discover unique and fun gifts at Variety Gifts Unlimited. From savings boxes to giant Snorlax plushies, we have something for everyone!"
		/>
		<meta
			name="keywords"
			content="gifts, unique gifts, fun gifts, savings box, dog toy, Snorlax plushie"
		/>
		<meta name="author" content="Variety Gifts Unlimited" />

		<!-- Open Graph / Facebook -->
		<meta property="og:type" content="website" />
		<meta
			property="og:url"
			content="https://www.varietygiftsunlimited.com/"
		/>
		<meta
			property="og:title"
			content="Variety Gifts Unlimited - Unique and Fun Gifts"
		/>
		<meta
			property="og:description"
			content="Discover unique and fun gifts at Variety Gifts Unlimited. From savings boxes to giant Snorlax plushies, we have something for everyone!"
		/>
		<meta
			property="og:image"
			content="https://www.varietygiftsunlimited.com/thumbnail.jpg"
		/>

		<!-- Microsoft Teams App Sharing -->
		<meta name="msapplication-TileColor" content="#da532c" />
		<meta name="msapplication-TileImage" content="/mstile-144x144.png" />
		<meta
			name="msapplication-square70x70logo"
			content="/mstile-70x70.png"
		/>
		<meta
			name="msapplication-square150x150logo"
			content="/mstile-150x150.png"
		/>
		<meta
			name="msapplication-wide310x150logo"
			content="/mstile-310x150.png"
		/>
		<meta
			name="msapplication-square310x310logo"
			content="/mstile-310x310.png"
		/>

		<!-- Twitter -->
		<meta property="twitter:card" content="summary_large_image" />
		<meta
			property="twitter:url"
			content="https://www.varietygiftsunlimited.com/"
		/>
		<meta
			property="twitter:title"
			content="Variety Gifts Unlimited - Unique and Fun Gifts"
		/>
		<meta
			property="twitter:description"
			content="Discover unique and fun gifts at Variety Gifts Unlimited. From savings boxes to giant Snorlax plushies, we have something for everyone!"
		/>
		<meta
			property="twitter:image"
			content="https://www.varietygiftsunlimited.com/thumbnail.jpg"
		/>

		<link rel="canonical" href="https://www.varietygiftsunlimited.com/" />
		<script is:inline>
			const isDark = JSON.parse(localStorage.getItem('isDark') ?? 'true');
			document.documentElement.setAttribute('data-theme', isDark ? 'halloween' : 'light');

			// Check if user has already made a choice about data collection
			const dataCollectionChoice = localStorage.getItem('allowDataCollection');
			if (dataCollectionChoice === null) {
				// If no choice has been made, we'll show the dialog when the page loads
				window.addEventListener('load', showDataCollectionDialog);
			} else if (dataCollectionChoice === 'true') {
				// If user agreed, inject Vercel Analytics
				import('@vercel/analytics').then(analytics => analytics.inject());
			}

			function showDataCollectionDialog() {
				const dialog = document.createElement('dialog');
				dialog.innerHTML = `
					<h2>Allow Anonymous Data Collection?</h2>
					<p>We'd like to collect anonymous usage data to improve our site. This helps us understand how our site is used and make it better for everyone.</p>
					<button id="allowData">Allow</button>
					<button id="denyData">Deny</button>
				`;
				document.body.appendChild(dialog);
				dialog.showModal();

				dialog.querySelector('#allowData').addEventListener('click', () => {
					localStorage.setItem('allowDataCollection', 'true');
					import('@vercel/analytics').then(analytics => analytics.inject());
					dialog.close();
				});

				dialog.querySelector('#denyData').addEventListener('click', () => {
					localStorage.setItem('allowDataCollection', 'false');
					dialog.close();
				});
			}
		</script>
	</head>

	<body class="bg-black">
		<slot />
	</body>
</html>


<style is:global>
	html,
	body {
		overflow-y: auto;
		min-width: 100%;
		min-height: fit-content;
		margin: 0;
		padding: 0;
		font-family: system-ui, sans-serif;
	}
	h1, h2 {
		font-family: 'Creepster', cursive;
	}
	h3, h4, h5, h6 {
		font-family: 'Roboto Slab Variable', serif;
	}

	dialog {
		padding: 1rem;
		background: white;
		color: black;
		border: 1px solid var(--border-color);
		border-radius: 0.5rem;
		max-width: 400px;
	}

	dialog::backdrop {
		background: rgba(0, 0, 0, 0.5);
	}

	dialog button {
		margin: 0.5rem;
		padding: 0.5rem 1rem;
		border: none;
		border-radius: 0.25rem;
		background: var(--button-bg);
		color: var(--button-text);
		cursor: pointer;
	}

	dialog button:hover {
		opacity: 0.8;
	}
</style>
