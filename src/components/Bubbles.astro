<div class="bubbles-wrapper">
  <div class="bubble bubble-1"></div>
  <div class="bubble bubble-2"></div>
  <div class="bubble bubble-3"></div>
  <div class="bubble bubble-4"></div>
  <div class="bubble bubble-5"></div>
  <div class="bubble bubble-6"></div>
</div>

<style>
  /* Bubbles Wrapper */
  .bubbles-wrapper {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
    z-index: 0;
    pointer-events: none;
  }

  /* Animated Bubbles */
  .bubble {
    position: absolute;
    background-color: rgba(242, 237, 255, 0.7);
    border-radius: 50%;
    z-index: 0;
    pointer-events: auto;
    box-shadow: inset 0 0 20px rgba(255, 192, 203, 0.5);
    cursor: pointer;
    transition: transform 0.1s ease-out;
  }

  .bubble:hover {
    transform: scale(1.05);
  }

  .bubble.popping {
    animation: pop 0.3s ease-out forwards;
  }

  @keyframes pop {
    0% {
      transform: scale(1);
      opacity: 1;
    }
    50% {
      transform: scale(1.2);
      opacity: 0.7;
    }
    100% {
      transform: scale(0);
      opacity: 0;
    }
  }

  .bubble-1 {
    width: 300px;
    height: 300px;
    top: -100px;
    right: -50px;
    animation: float-1 15s ease-in-out infinite alternate;
  }

  .bubble-2 {
    width: 200px;
    height: 200px;
    top: 50%;
    right: 10%;
    animation: float-2 18s ease-in-out infinite alternate;
  }

  .bubble-3 {
    width: 150px;
    height: 150px;
    bottom: 10%;
    right: 20%;
    animation: float-3 20s ease-in-out infinite alternate;
  }

  .bubble-4 {
    width: 250px;
    height: 250px;
    top: 20%;
    left: -50px;
    animation: float-4 17s ease-in-out infinite alternate;
  }

  .bubble-5 {
    width: 180px;
    height: 180px;
    bottom: -50px;
    left: 15%;
    animation: float-5 22s ease-in-out infinite alternate;
  }

  .bubble-6 {
    width: 120px;
    height: 120px;
    top: 40%;
    left: 30%;
    animation: float-6 19s ease-in-out infinite alternate;
  }

  /* Bubble Animations */
  @keyframes float-1 {
    0% { transform: translate(0, 0) rotate(0); }
    50% { transform: translate(15px, 15px) rotate(2deg); }
    100% { transform: translate(30px, 30px) rotate(5deg); }
  }

  @keyframes float-2 {
    0% { transform: translate(0, 0) rotate(0); }
    33% { transform: translate(-10px, 15px) rotate(-1deg); }
    66% { transform: translate(-5px, 30px) rotate(1deg); }
    100% { transform: translate(-20px, 40px) rotate(-2deg); }
  }

  @keyframes float-3 {
    0% { transform: translate(0, 0) rotate(0); }
    25% { transform: translate(20px, -10px) rotate(1deg); }
    75% { transform: translate(30px, -20px) rotate(-1deg); }
    100% { transform: translate(40px, -30px) rotate(2deg); }
  }

  @keyframes float-4 {
    0% { transform: translate(0, 0) rotate(0); }
    20% { transform: translate(10px, 5px) rotate(-1deg); }
    60% { transform: translate(30px, 12px) rotate(1deg); }
    100% { transform: translate(50px, 20px) rotate(-1deg); }
  }

  @keyframes float-5 {
    0% { transform: translate(0, 0) rotate(0); }
    40% { transform: translate(-15px, -15px) rotate(2deg); }
    80% { transform: translate(-25px, -30px) rotate(-2deg); }
    100% { transform: translate(-30px, -40px) rotate(3deg); }
  }

  @keyframes float-6 {
    0% { transform: translate(0, 0) rotate(0); }
    30% { transform: translate(10px, -10px) rotate(-2deg); }
    70% { transform: translate(18px, -18px) rotate(2deg); }
    100% { transform: translate(25px, -25px) rotate(-3deg); }
  }
</style>

<script>
  // Bubble popping functionality
  document.addEventListener('DOMContentLoaded', () => {
    const bubbles = document.querySelectorAll('.bubble');
    
    bubbles.forEach(bubble => {
      bubble.addEventListener('click', function(this: HTMLElement) {
        // Play pop sound
        const popSound = new Audio('/sounds/pop.mp3');
        popSound.volume = 0.5;
        popSound.play().catch(e => console.log('Audio play failed:', e));
        
        // Add popping animation
        this.classList.add('popping');
        
        // Remove bubble after animation completes
        setTimeout(() => {
          this.style.display = 'none';
        }, 300);
      });
    });
    
    // Regenerate bubbles when all are popped
    const checkAllPopped = () => {
      const visibleBubbles = document.querySelectorAll('.bubble:not([style*="display: none"])');
      if (visibleBubbles.length === 0) {
        setTimeout(() => {
          bubbles.forEach(bubble => {
            if (bubble instanceof HTMLElement) {
              bubble.style.display = '';
              bubble.classList.remove('popping');
            }
          });
        }, 2000);
      }
    };
    
    // Check if all bubbles are popped after each pop
    bubbles.forEach(bubble => {
      bubble.addEventListener('click', checkAllPopped);
    });
  });
</script> 